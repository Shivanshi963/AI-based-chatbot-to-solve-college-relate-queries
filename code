# Install spaCy and download language model
!pip install spacy
!python -m spacy download en_core_web_sm

# Import spaCy
import spacy

# Load English NLP model
nlp = spacy.load("en_core_web_sm")

# College Details
college_name = "Karnavati University"
school_name = "United World Institute of Technology"

# College Info Dictionary
college_info = {
    "fees structure": "Fee structure varies by course:\n- B.Tech: â‚¹80,000/year\n- M.Tech: â‚¹1,00,000/year\n- MBA: â‚¹1,20,000/year\n- Ph.D.: â‚¹60,000/year",
    "previous year college status": "In 2024, the college saw 95% placements. Over 120 companies including Google, TCS, Infosys visited the campus.",
    "number of students": "As of 2025, there are approximately 3,200 students enrolled across UG, PG, and Ph.D. programs.",
    "current events": "Upcoming Events:\n- Tech Fest: InnovateX 2025\n- Cultural Fest: Rhythm Night\n- Guest Lecture Series: Industry 5.0 Trends",
    "branches available": "Branches Offered:\n- Computer Science and Engineering\n- Electrical Engineering\n- Mechanical Engineering\n- Civil Engineering\n- Electronics and Communication Engineering",
    "facilities": "Facilities include:\n- Hostels for boys and girls\n- Wi-Fi-enabled campus\n- Smart classrooms\n- Central Library\n- Research and Innovation Lab\n- Sports Complex and Gym",
    "courses": "Academic Programs:\n- B.Tech in 5 branches\n- M.Tech in CSE, ECE, and Mechanical\n- MBA in HR, Finance, and Marketing\n- Ph.D. in Engineering, Sciences and Management",
    "placement details": "Placement 2024:\n- Highest Package: â‚¹25 LPA (Google)\n- Average Package: â‚¹7.5 LPA\n- Top Recruiters: Google, Microsoft, TCS, Amazon, Wipro",
    "admission process": "Admissions are based on national exams:\n- B.Tech: JEE Main\n- M.Tech: GATE\n- MBA: CAT/MAT\n- Ph.D.: College Entrance + Interview",
    "scholarships": "Scholarships Available:\n- Merit-based (up to 100%)\n- Need-based\n- Special scholarships for girl students and reserved categories",
    "hostel life": "Hostel Life:\n- Well-furnished rooms\n- 24x7 security\n- Mess with hygienic food\n- Recreational area and indoor games",
    "library info": "Library Info:\n- 50,000+ books\n- Subscriptions to 120+ journals and magazines\n- Access to IEEE, Springer, and J-Gate digital libraries",
    "faculty": "Faculty:\n- 200+ highly qualified faculty members\n- 80% hold PhDs\n- Active in research with 500+ publications in last 3 years"
}

# First-time flag
first_time = True

# Chatbot function
def chatbot(query):
    global first_time
    query = query.lower().strip()

    if any(kw in query for kw in ["no", "thank", "nothing", "bye", "exit"]):
        return "Thank you for visiting Karnavati University's virtual assistant. Have a great day!"

    if first_time:
        first_time = False
        return (
            f"ðŸ‘‹ Welcome to the virtual assistant of {college_name}, {school_name}.\n"
            "I can help with details about courses, fees, placements, events, and more.\n"
            "What would you like to know?"
        )

    if "fee" in query or "tuition" in query:
        return college_info["fees structure"]
    elif "previous year" in query or "last year" in query or "past" in query:
        return college_info["previous year college status"]
    elif "student" in query or "how many" in query:
        return college_info["number of students"]
    elif "event" in query or "fest" in query or "happening" in query:
        return college_info["current events"]
    elif "branch" in query or "department" in query:
        return college_info["branches available"]
    elif "facility" in query or "infrastructure" in query:
        return college_info["facilities"]
    elif "course" in query or "program" in query:
        return college_info["courses"]
    elif "placement" in query or "job" in query:
        return college_info["placement details"]
    elif "admission" in query or "apply" in query:
        return college_info["admission process"]
    elif "scholarship" in query or "aid" in query:
        return college_info["scholarships"]
    elif "hostel" in query or "living" in query:
        return college_info["hostel life"]
    elif "library" in query or "books" in query:
        return college_info["library info"]
    elif "faculty" in query or "professor" in query:
        return college_info["faculty"]
    else:
        return (
            "I'm sorry, I couldn't understand your question. Try asking about fees, courses, admissions, placements, or hostel."
        )

# Chat loop for Colab
print(f"ðŸ“š Welcome to {school_name} Virtual Assistant!")
print("ðŸ’¬ Type your question below (e.g., 'What is the fees for B.Tech?')\nðŸ”š Type 'exit' or 'bye' to quit.")

while True:
    user_input = input("\nðŸ‘¤ You: ")
    if user_input.lower() in ["exit", "bye"]:
        print("ðŸ¤– Assistant: Thank you! Have a great day!")
        break
    reply = chatbot(user_input)
    print("ðŸ¤– Assistant:", reply)
